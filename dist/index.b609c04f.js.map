{"mappings":"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","sources":["chart.js"],"sourcesContent":["\nconst PERCENT_VALUE = Math.PI * 2 / 100\nconst INTERVAL_VALUE = 10\n\nconst WIDTH = 500\nconst HEIGHT = 500\nconst CANVAS_COLOR = \"#1e1e1e\"\nconst SLICE_RADIUS = 400\nconst STROKE_COLOR = \"white\"\nconst CENTER_RADIUS = 150\nconst TEXT_COLOR = \"white\"\nconst FONT_SIZE = 33\nconst EMPTY_SLICE_COLOR = \"#2d2d2d\"\nconst EMPTY_SLICE_NAME = \"Other\"\nclass Chart {\n    constructor({\n                    parent,\n                    data,\n                    centerRadius,\n                    strokeColor,\n                    textColor,\n                    fontSize,\n                    name,\n                    emptySliceColor,\n                    canvasColor,\n        sliceRadius,\n        emptySliceName\n                }) {\n        this.parent = parent\n        this.canvas =  document.createElement(\"canvas\")\n        parent.appendChild(this.canvas)\n\n        this.ctx = this.canvas.getContext(\"2d\")\n\n        this.canvasColor = canvasColor || CANVAS_COLOR\n        this.canvas.style.width = WIDTH + \"px\"\n        this.canvas.style.height = HEIGHT + \"px\"\n        this.canvas.style.backgroundColor = this.canvasColor\n\n        this.canvas.width = WIDTH * 2\n        this.canvas.height = HEIGHT * 2\n\n        this.centerX = this.canvas.width / 2\n        this.centerY = this.canvas.height / 2\n\n        this.centerRadius = centerRadius || CENTER_RADIUS\n        this.strokeColor =  strokeColor || STROKE_COLOR\n        this.textColor = textColor || TEXT_COLOR\n        this.fontSize = fontSize || FONT_SIZE\n        this.name = name || \"\"\n        this.emptySliceColor = emptySliceColor || EMPTY_SLICE_COLOR\n        this.sliceRadius = sliceRadius || SLICE_RADIUS\n        this.emptySliceName = emptySliceName || EMPTY_SLICE_NAME\n\n        this.data = this.pushEmptySlice(data)\n\n        this.currentPercent = 0\n\n        this.dashboardHeight = 0\n        this.createDashboard()\n\n        this.gapY = parent.offsetTop + this.dashboardHeight\n        this.gapX = parent.offsetLeft\n        this.collusionArray = []\n\n        this.init()\n    }\n\n    init() {\n        this.drawChart()\n        this.getStrokeFunctions()\n        this.drawCenter()\n        this.createPopup()\n        this.canvas.addEventListener(\"mousemove\", this.mousemoveHandler.bind(this))\n    }\n\n    createDashboard() {\n        const element = document.createElement(\"div\")\n        element.style.width = this.canvas.style.width\n        element.style.backgroundColor = this.canvasColor\n        element.classList.add(\"dashboard\")\n        this.canvas.insertAdjacentElement(\"beforebegin\", element)\n        this.data.forEach((item) => {\n            element.insertAdjacentHTML(\"beforeend\",\n                `\n                <div class=\"dashboard-item\">\n                    <span class=\"dashboard-item-before\" style=\"background-color: ${item.color}\"></span>\n                    <span>${item.name}</span>\n                </div>\n                `\n            )\n        })\n        this.dashboardHeight = element.clientHeight\n    }\n\n    checkInOrOutClick(x, y) {\n        return Math.pow(this.centerRadius  / 2, 2) - Math.pow(x - this.centerX / 2 - this.gapX, 2) - Math.pow(y - this.centerY / 2 - this.gapY , 2) > 0\n            || Math.pow(this.sliceRadius / 2, 2) - Math.pow(x - this.centerX / 2 - this.gapX , 2) - Math.pow(y - this.centerY / 2 - this.gapY, 2) < 0\n    }\n\n    getStrokeFunctions() {\n        let total = 0\n        this.data.forEach(({percent}, i)=> {\n            const start = total * PERCENT_VALUE\n            const end = (total + percent) * PERCENT_VALUE\n            const centerX = this.centerX / 2 + this.gapX\n            const centerY = this.centerY / 2 + this.gapY\n            const gapEndStart = end - start\n\n            let startIs270MoreOr90Less = false,\n                endIs270MoreOr90Less = false,\n                isBigger180 = false\n\n            if (start <= Math.PI / 2 || start >= Math.PI * (3/2)) startIs270MoreOr90Less = true\n            if (end <= Math.PI / 2 || end >= Math.PI * (3/2)) endIs270MoreOr90Less = true\n            if (gapEndStart > Math.PI) isBigger180 = true\n\n            let k1 = Math.tan(start),\n                b1 = centerY - k1 * centerX,\n                k2 = Math.tan(end),\n                b2 = centerY - k2 *  centerX\n\n            let k2PerpendicularX = false\n            if (end.toFixed(5) === (Math.PI / 2).toFixed(5) || end.toFixed(5) === (Math.PI * (3/2)).toFixed(5)) k2PerpendicularX = true\n\n            let k1PerpendicularX = false\n            if (start.toFixed(5) === (Math.PI / 2).toFixed(5) || start.toFixed(5) === (Math.PI * (3/2)).toFixed(5)) k1PerpendicularX = true\n\n            let k2PerpendicularY = false\n            if (end.toFixed(5) === Math.PI.toFixed(5) || end === 0 || end.toFixed(5) === (Math.PI * 2).toFixed(5)) k2PerpendicularY = true\n\n            let k1PerpendicularY = false\n            if (start.toFixed(5) === Math.PI.toFixed(5) || start === 0 || start.toFixed(5) === (Math.PI * 2).toFixed(5)) k1PerpendicularY = true\n\n\n            this.collusionArray.push({\n                k1: k1PerpendicularY || k1PerpendicularX ? 0 : k1,\n                b1: k1PerpendicularY || k1PerpendicularX ? 0 : b1,\n                k2: k2PerpendicularY || k2PerpendicularX ? 0 : k2,\n                b2: k2PerpendicularY || k2PerpendicularX ? 0 : b2,\n                startIs270MoreOr90Less,\n                endIs270MoreOr90Less,\n                isBigger180,\n                start,\n                end,\n                k2PerpendicularY,\n                k1PerpendicularY,\n                k2PerpendicularX,\n                k1PerpendicularX\n            })\n\n            total += percent\n        })\n    }\n\n    createPopup() {\n        document.querySelector(\"body\")\n            .insertAdjacentHTML(\"afterbegin\", `<div class=\"popup\"></div>`)\n    }\n    pushEmptySlice(array) {\n        const totalPercent = array.reduce((accumulator, {percent}) => {\n            return accumulator + percent\n        }, 0)\n        if (totalPercent < 100) {\n            array.push({\n                percent: 100 - totalPercent,\n                color: this.emptySliceColor,\n                name: this.emptySliceName\n            })\n        }\n        return array\n    }\n\n    mousemoveHandler(e) {\n        const popup = document.querySelector(\".popup\")\n        for (let i = 0; i < this.data.length; i++) {\n            let top, bottom\n            const coll = this.collusionArray[i]\n            const slice = this.data[i]\n            const calculation1 =  e.pageY - coll.k1 * e.pageX - coll.b1\n            const calculation2 =  e.pageY - coll.k2 * e.pageX - coll.b2\n\n            if (coll.startIs270MoreOr90Less) top = calculation1 > 0\n            else top = calculation1 < 0\n\n            if (coll.endIs270MoreOr90Less) bottom = calculation2 < 0\n            else bottom = calculation2 > 0\n\n\n            if (coll.k2PerpendicularY && coll.end.toFixed(5) === (Math.PI * 2).toFixed(5)) bottom = e.pageY < this.centerY / 2 + this.canvas.offsetTop\n            if (coll.k2PerpendicularY && coll.end.toFixed(5) === Math.PI.toFixed(5)) bottom = e.pageY > this.centerY / 2 + this.canvas.offsetTop\n\n            if (coll.k2PerpendicularX && coll.end.toFixed(5) === (Math.PI / 2).toFixed(5)) bottom = e.pageX > this.centerX / 2 + this.canvas.offsetLeft\n            if (coll.k2PerpendicularX && coll.end.toFixed(5) === (Math.PI * (3/2)).toFixed(5)) bottom = e.pageX < this.centerX / 2 + this.canvas.offsetLeft\n\n            if (coll.k1PerpendicularY && coll.start.toFixed(5) === (Math.PI * 2).toFixed(5)) top = e.pageY > this.centerY / 2 + this.canvas.offsetTop\n            if (coll.k1PerpendicularY && coll.start.toFixed(5) === Math.PI.toFixed(5)) top = e.pageY < this.centerY / 2 + this.canvas.offsetTop\n\n            if (coll.k1PerpendicularX && coll.start.toFixed(5) === (Math.PI / 2).toFixed(5)) top = e.pageX < this.centerX / 2 + this.canvas.offsetLeft\n            if (coll.k1PerpendicularX && coll.start.toFixed(5) === (Math.PI * (3/2)).toFixed(5)) top = e.pageX > this.centerX / 2 + this.canvas.offsetLeft\n\n\n            if (top && bottom || (coll.isBigger180 && (top || bottom))) {\n                popup.style.display = \"flex\"\n                popup.style.transform = `translate(${e.pageX}px, ${e.pageY}px)`\n                popup.textContent = slice.name + \" \" + slice.percent + \"%\"\n            }\n\n            if (this.checkInOrOutClick(e.pageX, e.pageY)) popup.style.display = \"none\"\n        }\n    }\n\n    drawChart() {\n        for (const {color, percent} of this.data) {\n            const sliceCurrentPercent = this.currentPercent\n            let angle  = 0\n            const intervalId = setInterval(() => {\n                if (angle >= percent) clearInterval(intervalId)\n\n                this.ctx.beginPath()\n                this.ctx.fillStyle = color\n                this.ctx.moveTo(this.centerX, this.centerY)\n                this.ctx.arc(\n                    this.centerX,\n                    this.centerY,\n                    this.sliceRadius,\n                    sliceCurrentPercent * PERCENT_VALUE,\n                    (sliceCurrentPercent + angle) * PERCENT_VALUE\n                )\n                this.ctx.fill()\n                this.ctx.strokeStyle = this.strokeColor\n                this.ctx.stroke()\n                this.ctx.closePath()\n\n                this.drawCenter()\n\n                angle += 1\n            }, INTERVAL_VALUE)\n\n            this.currentPercent += percent\n        }\n    }\n\n    drawCenter() {\n        this.ctx.beginPath()\n        this.ctx.fillStyle = this.canvas.style.backgroundColor\n        this.ctx.arc(\n            this.centerX,\n            this.centerY,\n            this.centerRadius,\n            0,\n            Math.PI * 2\n        )\n        this.ctx.fill()\n        this.ctx.strokeStyle = this.strokeColor\n        this.ctx.stroke()\n\n        this.ctx.fillStyle = this.textColor\n        this.ctx.font = `${this.fontSize}px serif`\n        this.ctx.textAlign = \"center\"\n        this.ctx.fillText(this.name, this.centerX, this.centerY)\n        this.ctx.closePath()\n    }\n}\n\nnew Chart({\n    parent: document.querySelector(\".wrapper\"),\n    data: [\n        {\n            percent: 25,\n            color: \"#9255d9\",\n            name: \"Fight club\"\n        },\n        {\n            percent: 25,\n            color: \"#49945a\",\n            name: \"Revolver\"\n        },\n        {\n            percent: 25,\n            color: \"#e59d59\",\n            name: \"Forrest Gump\"\n        },\n    ],\n    name: \"Favorite films\"\n})\n"],"names":[],"version":3,"file":"index.b609c04f.js.map","sourceRoot":"/__parcel_source_root/"}